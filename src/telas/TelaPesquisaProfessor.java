/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import Banco.Acessa;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RojeruSan
 */
public class TelaPesquisaProfessor extends javax.swing.JPanel {

    /**
     * Creates new form pnlHome
     */
    public TelaPesquisaProfessor() {
        initComponents();
        pesquisaMateria();
        cbxDisciplinaC.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaC = new javax.swing.JTable();
        cbxCursoC = new javax.swing.JComboBox<>();
        telProf = new javax.swing.JLabel();
        emailProf = new javax.swing.JLabel();
        cbxDisciplinaC = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(244, 244, 244));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaC.setFont(new java.awt.Font("Bernard MT Condensed", 0, 15)); // NOI18N
        tabelaC.setForeground(new java.awt.Color(150, 150, 150));
        tabelaC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Disciplina", "Pontuação", "Identificação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaC);
        if (tabelaC.getColumnModel().getColumnCount() > 0) {
            tabelaC.getColumnModel().getColumn(0).setPreferredWidth(160);
            tabelaC.getColumnModel().getColumn(1).setPreferredWidth(120);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 610, 380));

        cbxCursoC.setFont(new java.awt.Font("Bernard MT Condensed", 0, 16)); // NOI18N
        cbxCursoC.setForeground(new java.awt.Color(150, 150, 150));
        cbxCursoC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha o Curso" }));
        cbxCursoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCursoCActionPerformed(evt);
            }
        });
        add(cbxCursoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 230, -1));

        telProf.setFont(new java.awt.Font("Bernard MT Condensed", 0, 20)); // NOI18N
        telProf.setForeground(new java.awt.Color(150, 150, 150));
        telProf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/telefone.png"))); // NOI18N
        telProf.setText("Telefone:");
        add(telProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 490, 260, 50));

        emailProf.setFont(new java.awt.Font("Bernard MT Condensed", 0, 20)); // NOI18N
        emailProf.setForeground(new java.awt.Color(150, 150, 150));
        emailProf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/email.png"))); // NOI18N
        emailProf.setText("Email:");
        add(emailProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, 310, 50));

        cbxDisciplinaC.setFont(new java.awt.Font("Bernard MT Condensed", 0, 16)); // NOI18N
        cbxDisciplinaC.setForeground(new java.awt.Color(150, 150, 150));
        cbxDisciplinaC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha a Disciplina" }));
        cbxDisciplinaC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxDisciplinaCMouseClicked(evt);
            }
        });
        cbxDisciplinaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDisciplinaCActionPerformed(evt);
            }
        });
        add(cbxDisciplinaC, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 230, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCMouseClicked

        pesquisaProf(Integer.parseInt((String) tabelaC.getValueAt(tabelaC.getSelectedRow(), 3)));
        
        
        //tabelaC.getSelectedRow() pegar linha
    }//GEN-LAST:event_tabelaCMouseClicked

    private void cbxCursoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCursoCActionPerformed
        int posicao = cbxCursoC.getSelectedIndex();
        if (posicao > 0){
            nomeCursoC = cbxCursoC.getSelectedItem().toString();
            pesquisaDisc();
            cbxDisciplinaC.setEnabled(true);

        }

        //ORDER BY total_sales_value DESC;
    }//GEN-LAST:event_cbxCursoCActionPerformed

    private void cbxDisciplinaCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxDisciplinaCMouseClicked

    }//GEN-LAST:event_cbxDisciplinaCMouseClicked

    private void cbxDisciplinaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDisciplinaCActionPerformed

        int posicao = cbxDisciplinaC.getSelectedIndex();
        if (posicao > 0) {
            String dados = cbxDisciplinaC.getSelectedItem().toString();
            String[] saida = cbxDisciplinaC.getSelectedItem().toString().split(" ");
            nomeDisciplina = saida[0];
            pesquisaTabela();
        }

    }//GEN-LAST:event_cbxDisciplinaCActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbxCursoC;
    private javax.swing.JComboBox<String> cbxDisciplinaC;
    private javax.swing.JLabel emailProf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaC;
    private javax.swing.JLabel telProf;
    // End of variables declaration//GEN-END:variables

    Acessa objA = new Acessa();

    String nomeCursoC, nomeDisciplina;

    public void pesquisaMateria() {
        objA.entBanco();
        try {
            objA.RS = objA.stmt.executeQuery("SELECT DISTINCT  nome_curso FROM aulas_disponiveis  where unidade="+Banco.dados_pesquisa.unidade+" order by nome_curso");
            while (objA.RS.next()) {
                cbxCursoC.addItem(objA.RS.getString("nome_curso"));
            }
        } catch (Exception e) {
        }
    }

    public void pesquisaDisc() {
        objA.entBanco();
        tableModel = (DefaultTableModel) tabelaC.getModel();
        tableModel.setNumRows(0);
        try {
            objA.RS = objA.stmt.executeQuery("SELECT * FROM aulas_disponiveis  where unidade=" + Banco.dados_pesquisa.unidade + "  and  nome_curso = '" + nomeCursoC + "' order by nome_disciplina");
            cbxDisciplinaC.removeAllItems();
            cbxDisciplinaC.addItem("Escolha a Disciplina");
            while (objA.RS.next()) {
                cbxDisciplinaC.addItem(objA.RS.getString("nome_disciplina") + " - " + objA.RS.getString("horario_aula"));
            }

        } catch (Exception e) {
        }
    }
    
    DefaultTableModel tableModel;
    
    public void pesquisaTabela() {
        objA.entBanco();
        try {
            objA.RS = objA.stmt.executeQuery("SELECT DISTINCT professor.id,professor.nome_prof, professor.formacao_prof, professor.pontos_prof, professor.telProf, professor.emailProf FROM professor JOIN  aulas_disponiveis \n ON  professor.area_prof = aulas_disponiveis.formacao_prof WHERE aulas_disponiveis.nome_disciplina='"+nomeDisciplina+"' ORDER BY professor.nome_prof");

            tableModel = (DefaultTableModel) tabelaC.getModel();
            tableModel.setNumRows(0);
            int i = 0;

            while (objA.RS.next()) {
                ((DefaultTableModel) tabelaC.getModel()).addRow(new Vector());

                tabelaC.getModel().setValueAt(objA.RS.getString("nome_prof"), i, 0);
                //tabelaC é o nome da tabela
                tabelaC.getModel().setValueAt(objA.RS.getString("formacao_prof"), i, 1);
                tabelaC.getModel().setValueAt(objA.RS.getString("pontos_prof"), i, 2);
                tabelaC.getModel().setValueAt(objA.RS.getString("id"), i, 3);
                i++;
            }

        } catch (Exception e) {
        }
    }

    public void pesquisaProf(int id) {
        objA.entBanco();
        try {
            objA.RS = objA.stmt.executeQuery("SELECT telProf, emailProf FROM professor  where id = "+id+"");

            if (objA.RS.next()) {
                telProf.setText(objA.RS.getString("telProf"));
                emailProf.setText(objA.RS.getString("emailProf"));
            }

        } catch (Exception e) {
        }
    }


}
