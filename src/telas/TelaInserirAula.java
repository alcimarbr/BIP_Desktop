/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import Banco.Acessa;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author RojeruSan
 */
public class TelaInserirAula extends javax.swing.JPanel {

    /**
     * Creates new form pnlHome
     */
    public TelaInserirAula() {
        initComponents();
        pesquisaMateria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbCurso = new javax.swing.JComboBox<>();
        cbDiscip = new javax.swing.JComboBox<>();
        cbDiaSeman = new javax.swing.JComboBox<>();
        cbHorario = new javax.swing.JComboBox<>();
        cbStatus = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        lblformProf = new javax.swing.JLabel();
        cbQuantidade = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(244, 244, 244));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbCurso.setFont(new java.awt.Font("Bernard MT Condensed", 0, 18)); // NOI18N
        cbCurso.setForeground(new java.awt.Color(128, 128, 131));
        cbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Curso" }));
        cbCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCursoActionPerformed(evt);
            }
        });
        add(cbCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 220, -1));

        cbDiscip.setFont(new java.awt.Font("Bernard MT Condensed", 0, 18)); // NOI18N
        cbDiscip.setForeground(new java.awt.Color(128, 128, 131));
        cbDiscip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disciplina" }));
        cbDiscip.setEnabled(false);
        cbDiscip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDiscipActionPerformed(evt);
            }
        });
        add(cbDiscip, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 230, -1));

        cbDiaSeman.setFont(new java.awt.Font("Bernard MT Condensed", 0, 18)); // NOI18N
        cbDiaSeman.setForeground(new java.awt.Color(128, 128, 131));
        cbDiaSeman.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dia da Aula", "2ª feira", "3ª feira", "4ª feira", "5ª feira", "6ª feira", "Sábado" }));
        cbDiaSeman.setEnabled(false);
        cbDiaSeman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDiaSemanActionPerformed(evt);
            }
        });
        add(cbDiaSeman, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 150, -1));

        cbHorario.setFont(new java.awt.Font("Bernard MT Condensed", 0, 18)); // NOI18N
        cbHorario.setForeground(new java.awt.Color(128, 128, 131));
        cbHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Horário", "Manhã 1º", "Manhã 2º", "Manhã 3º", "Manhã 4º", "Tarde 1º", "Tarde 2º", "Tarde 3º", "Tarde 4º", "Noite 1º", "Noite 2º", "Noite 3º" }));
        cbHorario.setEnabled(false);
        cbHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHorarioActionPerformed(evt);
            }
        });
        add(cbHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 150, -1));

        cbStatus.setFont(new java.awt.Font("Bernard MT Condensed", 0, 18)); // NOI18N
        cbStatus.setForeground(new java.awt.Color(128, 128, 131));
        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Status", "Livre", "Substituição" }));
        cbStatus.setEnabled(false);
        cbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatusActionPerformed(evt);
            }
        });
        add(cbStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, 130, -1));

        jButton1.setFont(new java.awt.Font("Bernard MT Condensed", 0, 20)); // NOI18N
        jButton1.setForeground(new java.awt.Color(128, 128, 131));
        jButton1.setText("Inserir Aula no Sistema");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, 40));

        lblformProf.setFont(new java.awt.Font("Bernard MT Condensed", 0, 20)); // NOI18N
        lblformProf.setForeground(new java.awt.Color(128, 128, 131));
        lblformProf.setText("Formação: ");
        add(lblformProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 250, 320, 30));

        cbQuantidade.setFont(new java.awt.Font("Bernard MT Condensed", 0, 18)); // NOI18N
        cbQuantidade.setForeground(new java.awt.Color(128, 128, 131));
        cbQuantidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quantidade", "1 Aula", "1,25 Aulas", "2 Aulas", "2,5 Aulas", "3 Aulas", "3,75 Aulas", "4 Aulas", "5 Aulas" }));
        cbQuantidade.setEnabled(false);
        cbQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbQuantidadeActionPerformed(evt);
            }
        });
        add(cbQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, 130, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cbCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCursoActionPerformed
       int posicao = cbCurso.getSelectedIndex();
        if (posicao > 0){
            Banco.dados_pesquisa.nomeCurso = cbCurso.getSelectedItem().toString();
            pesquisaDisc();
            cbDiscip.setEnabled(true);
            cbDiaSeman.setEnabled(true);
            cbHorario.setEnabled(true);
            cbStatus.setEnabled(true);
            cbQuantidade.setEnabled(true);
            confere++;
        }
    }//GEN-LAST:event_cbCursoActionPerformed

    private void cbDiscipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDiscipActionPerformed
        int posicao = cbDiscip.getSelectedIndex();
        if (posicao > 0){
            
            String[] discTratada = cbDiscip.getSelectedItem().toString().split(" ");
            lblformProf.setText("Formação: " + Banco.dados_pesquisa.formacaoProf);
            Banco.dados_pesquisa.nomeDisciplina = discTratada[0];
            Banco.dados_pesquisa.id_disciplina = Integer.parseInt(discTratada[2]);
            
            confere++;
        }
    }//GEN-LAST:event_cbDiscipActionPerformed

    private void cbDiaSemanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDiaSemanActionPerformed
        int posicao = cbDiaSeman.getSelectedIndex();
        if (posicao > 0){
            Banco.dados_pesquisa.diaAula = cbDiaSeman.getSelectedItem().toString();
            confere++;
        }
    }//GEN-LAST:event_cbDiaSemanActionPerformed

    private void cbHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHorarioActionPerformed
        int posicao = cbHorario.getSelectedIndex();
        if (posicao > 0){
            Banco.dados_pesquisa.horarioAula = cbHorario.getSelectedItem().toString();
            confere++;
        }
    }//GEN-LAST:event_cbHorarioActionPerformed

    private void cbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatusActionPerformed
        int posicao = cbStatus.getSelectedIndex();
        if (posicao > 0){
            Banco.dados_pesquisa.statusAula = cbStatus.getSelectedItem().toString();
            confere++;
        }
    }//GEN-LAST:event_cbStatusActionPerformed

    private void cbQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbQuantidadeActionPerformed
        int posicao = cbQuantidade.getSelectedIndex();
        if (posicao > 0){
            String[] qtTratada = cbQuantidade.getSelectedItem().toString().replace(",", ".").split(" ");
            
            Banco.dados_pesquisa.quantAula = Double.parseDouble(qtTratada[0]);
            confere++;
        }
    }//GEN-LAST:event_cbQuantidadeActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        inserirAula();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCurso;
    private javax.swing.JComboBox<String> cbDiaSeman;
    private javax.swing.JComboBox<String> cbDiscip;
    private javax.swing.JComboBox<String> cbHorario;
    private javax.swing.JComboBox<String> cbQuantidade;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblformProf;
    // End of variables declaration//GEN-END:variables
    int confere =0;
    
    Acessa objA = new Acessa();
    
    public void pesquisaMateria() {
        objA.entBanco();
        try {
            objA.RS = objA.stmt.executeQuery("SELECT MIN(id_curso) AS id_curso, nome_curso, ue FROM curso WHERE ue = "+Banco.dados_pesquisa.unidade+" GROUP BY nome_curso, ue ORDER BY nome_curso");
            //objA.RS = objA.stmt.executeQuery("SELECT DISTINCT nome_curso , id_curso FROM curso  where ue="+Banco.dados_pesquisa.unidade+"  order by nome_curso");
            
            while (objA.RS.next()) {
                cbCurso.addItem(objA.RS.getString("nome_curso"));
            }

        } catch (SQLException e) {
        }
    }


    private void pesquisaDisc() {
        objA.entBanco();
        try {
            objA.RS = objA.stmt.executeQuery("SELECT MIN(id_disciplina) AS id_disciplina, ue, nome_disciplina, area_disciplina FROM disciplina WHERE ue = "+Banco.dados_pesquisa.unidade+" and nome_curso = '"+Banco.dados_pesquisa.nomeCurso+"'  GROUP BY ue, nome_disciplina, area_disciplina ORDER BY nome_disciplina");
            cbDiscip.removeAllItems();
            cbDiscip.addItem("Disciplina");
           // objA.RS = objA.stmt.executeQuery("SELECT DISTINCT  * FROM disciplina  where ue="+Banco.dados_pesquisa.unidade+" and id_curso="+Banco.dados_pesquisa.id_curso+" order by nome_disciplina");
            while (objA.RS.next()) {
                cbDiscip.addItem(objA.RS.getString("nome_disciplina")+ " id: "+objA.RS.getString("id_disciplina"));
                Banco.dados_pesquisa.formacaoProf = objA.RS.getString("area_disciplina");
            }
        } catch (SQLException e) {
        }
        
        
      
    }
    
    public void inserirAula(){
        if (confere >= 6) {
            objA.entBanco();
            try {
                int x = objA.stmt.executeUpdate("insert into aulas_disponiveis "
                        + "(nome_disciplina, unidade, nome_curso, CPF, num_aulas, dia_semana, horario_aula, status_aula, formacao_prof)values "
                        + "('"+Banco.dados_pesquisa.nomeDisciplina+"', "+Banco.dados_pesquisa.unidade+", '"+Banco.dados_pesquisa.nomeCurso+"', '0', "+Banco.dados_pesquisa.quantAula+", '"+Banco.dados_pesquisa.diaAula+"', '"+Banco.dados_pesquisa.horarioAula+"', '"+Banco.dados_pesquisa.statusAula+"', '"+Banco.dados_pesquisa.formacaoProf+"')");
                        //'"+Banco.dados_pesquisa.nomeDisciplina+"', "+Banco.dados_pesquisa.unidade+", '"+Banco.dados_pesquisa.nomeCurso+"', '0', "+Banco.dados_pesquisa.quantAula+", '"+Banco.dados_pesquisa.diaAula+"', '"+Banco.dados_pesquisa.horarioAula+"', '"+Banco.dados_pesquisa.statusAula+"', '"+Banco.dados_pesquisa.formacaoProf+"'
                if (x != 0) {
                    JOptionPane.showMessageDialog(this, "Aula inserida no sistema", "Aviso", 2);
                    objA.stmt.executeUpdate("DELETE FROM disciplina WHERE id_disciplina ="+Banco.dados_pesquisa.id_disciplina+"");
                } else {
                    JOptionPane.showMessageDialog(this, "Não foi possível inserir a aula", "Aviso", 3);
                }
                voltarInicio();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Escolha os dados");
        }
    }
    
    public void voltarInicio(){
        cbCurso.setSelectedIndex(0);
        cbDiaSeman.setSelectedIndex(0);
        cbDiscip.setSelectedIndex(0);
        cbHorario.setSelectedIndex(0);
        cbQuantidade.setSelectedIndex(0);
        cbStatus.setSelectedIndex(0);
        lblformProf.setText ("Formação: ");
        cbDiaSeman.setEnabled(false);
        cbDiscip.setEnabled(false);
        cbHorario.setEnabled(false);
        cbQuantidade.setEnabled(false);
        cbStatus.setEnabled(false);
    }
    
}
